" rspec mappings
"map ,t :w\|!spec %<CR>
map ,t :call RunSpecFile()<CR>
map ,s :call RunNearestSpec()<CR>
map ,l :call RunLastSpec()<CR>

" spec support
function! GuessSpecCommand()
  if executable("zeus")
    return "zeus rspec"
  else
    " return "bundle exec rails test"
    return "bundle exec rspec"
    " return "bundle exec m"
  endif
endfunction

function! RunSpecFile()
  if InSpecFile()
    let t:last_spec_file_command = GuessSpecCommand() . " " . @%
    " let t:last_spec_file_command = GuessSpecCommand() . " TEST=" . @%
  endif

  call RunLastSpecFile()
endfunction

function! RunNearestSpec()
  if InSpecFile()
    let t:last_nearest_spec_command = GuessSpecCommand() . " " . @% . ":" . line(".")
  endif

  call RunLastNearestSpec()
endfunction

function! RunLastSpec()
  call RunSpecs()
endfunction

function! InSpecFile()
  return match(expand("%"), "_spec.rb$") != -1
  " return match(expand("%"), "_test.rb$") != -1
endfunction

function! RunLastNearestSpec()
  if exists("t:last_nearest_spec_command")
    call SetLastSpecCommand(t:last_nearest_spec_command)
    call RunSpecs()
  endif
endfunction

function! RunLastSpecFile()
  if exists("t:last_spec_file_command")
    call SetLastSpecCommand(t:last_spec_file_command)
    call RunSpecs()
  endif
endfunction

function! RunSpecs()
  if exists("t:last_spec_command")
    execute ":w\|!clear && echo " . t:last_spec_command . " && echo && " . t:last_spec_command
  endif
endfunction

function! SetLastSpecCommand(command)
  let t:last_spec_command = a:command
endfunction
